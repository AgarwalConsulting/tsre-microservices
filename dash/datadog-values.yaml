nameOverride: datadog-agent
fullnameOverride: datadog-agent
targetSystem: "linux"

commonLabels: {
  env: dev,
  team_name: dash2023
}


datadog:
  apiKeyExistingSecret: datadog-secret
  appKeyExistingSecret: datadog-secret
  # Enable Log collections
  logs:
    enabled: true
    containerCollectAll: true
  collectEvents: true
  networkMonitoring:
    enabled: true
  processAgent:
    enabled: true
    processCollection: true
  orchestratorExplorer:
    enabled: true
  # logLevel: info
  tags: 
  kubelet:
    tlsVerify: false
  env:
    - name: DD_HOSTNAME
      valueFrom:
        fieldRef:
          fieldPath: spec.nodeName
  # Enable APM
  apm:
    socketEnabled: true
    portEnabled: true

  ## OTLP ingest related configuration
  otlp:
    receiver:
      protocols:
        # datadog.otlp.receiver.protocols.grpc - OTLP/gRPC configuration
        grpc:
          # datadog.otlp.receiver.protocols.grpc.enabled -- Enable the OTLP/gRPC endpoint
          enabled: false
          # datadog.otlp.receiver.protocols.grpc.endpoint -- OTLP/gRPC endpoint
          endpoint: "0.0.0.0:4317"
          # datadog.otlp.receiver.protocols.grpc.useHostPort -- Enable the Host Port for the OTLP/gRPC endpoint
          useHostPort: true

        # datadog.otlp.receiver.protocols.http - OTLP/HTTP configuration
        http:
          # datadog.otlp.receiver.protocols.http.enabled -- Enable the OTLP/HTTP endpoint
          enabled: false
          # datadog.otlp.receiver.protocols.http.endpoint -- OTLP/HTTP endpoint
          endpoint: "0.0.0.0:4318"
          # datadog.otlp.receiver.protocols.http.useHostPort -- Enable the Host Port for the OTLP/HTTP endpoint
          useHostPort: true



clusterAgent:
  enabled: true
  rbac:
    create: true
  replicas: 1
  createPodDisruptionBudget: false
  admissionController:
    enabled: true